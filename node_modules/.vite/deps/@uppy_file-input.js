import {
  toArray_default
} from "./chunk-XBXCA4S4.js";
import {
  UIPlugin_default,
  _
} from "./chunk-MXP2G3K6.js";
import "./chunk-5WWUZCGV.js";

// node_modules/@uppy/file-input/lib/locale.js
var locale_default = {
  strings: {
    chooseFiles: "Choose files"
  }
};

// node_modules/@uppy/file-input/lib/FileInput.js
var packageJson = {
  "version": "4.1.3"
};
var defaultOptions = {
  pretty: true,
  inputName: "files[]"
};
var FileInput = class extends UIPlugin_default {
  constructor(uppy, opts) {
    super(uppy, {
      ...defaultOptions,
      ...opts
    });
    this.input = null;
    this.id = this.opts.id || "FileInput";
    this.title = "File Input";
    this.type = "acquirer";
    this.defaultLocale = locale_default;
    this.i18nInit();
    this.render = this.render.bind(this);
    this.handleInputChange = this.handleInputChange.bind(this);
    this.handleClick = this.handleClick.bind(this);
  }
  addFiles(files) {
    const descriptors = files.map((file) => ({
      source: this.id,
      name: file.name,
      type: file.type,
      data: file
    }));
    try {
      this.uppy.addFiles(descriptors);
    } catch (err) {
      this.uppy.log(err);
    }
  }
  handleInputChange(event) {
    this.uppy.log("[FileInput] Something selected through input...");
    const files = toArray_default(event.currentTarget.files || []);
    this.addFiles(files);
    event.currentTarget.value = "";
  }
  handleClick() {
    this.input.click();
  }
  render() {
    var _restrictions$allowed;
    const hiddenInputStyle = {
      width: "0.1px",
      height: "0.1px",
      opacity: 0,
      overflow: "hidden",
      position: "absolute",
      zIndex: -1
    };
    const {
      restrictions
    } = this.uppy.opts;
    return _("div", {
      className: "uppy-FileInput-container"
    }, _("input", {
      className: "uppy-FileInput-input",
      style: this.opts.pretty ? hiddenInputStyle : void 0,
      type: "file",
      name: this.opts.inputName,
      onChange: this.handleInputChange,
      multiple: restrictions.maxNumberOfFiles !== 1,
      accept: (_restrictions$allowed = restrictions.allowedFileTypes) == null ? void 0 : _restrictions$allowed.join(", "),
      ref: (input) => {
        this.input = input;
      }
    }), this.opts.pretty && _("button", {
      className: "uppy-FileInput-btn",
      type: "button",
      onClick: this.handleClick
    }, this.i18n("chooseFiles")));
  }
  install() {
    const {
      target
    } = this.opts;
    if (target) {
      this.mount(target, this);
    }
  }
  uninstall() {
    this.unmount();
  }
};
FileInput.VERSION = packageJson.version;
export {
  FileInput as default
};
//# sourceMappingURL=@uppy_file-input.js.map
